{
  "hash": "ccf88a3bb19becca8d7dbc048ff992bd",
  "result": {
    "markdown": "---\ntitle: \"Boston Renters\"\nexecute: \n    freeze: auto\nformat: \n  html: \n    code-fold: show\n    code-tools: true\n---\n\n\n\n\n## Abstract\n\nAffordable rental housing or income-restricted rental housing usually means a dwelling unit for a lease that is capped for qualified households. Usually, they are reserved for people earning less than 80%, 50%, or 30% of Area Median Income (AMI). Boston already has one of the highest shares of income restricted housing per total units in the country. According to City of Boston, around 27% of all rental units are income restricted and 95% of all income restricted units are rental. Nevertheless, CHMA reports that for the next three years, the demand is estimated to be 34,675 new rental units, with only 16,450 units underway, facilitating shortage and further rent increase. Not to mention the record costs of building in Boston and limited space.\n\nBelow are the illustrations of the sample dimensions, calculated using American Community Survey public use samples (2021).\n\nThe tables illustrate the proportion of cost-burdened and severely cost-burdened households by race, size, and income groups in Boston. We can see that the distribution of different races, for example, is different from general population. According to the Boston Neighborhoods Demographics, in Boston overall, there are 44% of White and 22.7% of Black population, in contrast of around 36% and 18% in the target population, respectively. Not proportionate sample might introduce bias by overrepresenting and underrepresenting different groups. We can also observe that 9.6% do qualify for 80% AMI housing, even though they are cost burdened.\n\n\n## Data Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.5     ✔ dplyr   1.1.0\n✔ tibble  3.1.8     ✔ stringr 1.4.0\n✔ tidyr   1.2.0     ✔ forcats 0.5.1\n✔ purrr   1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nrents <- read_csv(\"usa_00003.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 6605 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (17): YEAR, SAMPLE, SERIAL, CBSERIAL, HHWT, CLUSTER, CITY, STRATA, GQ, R...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents = rents %>% \n  dplyr::mutate(rentyearly = RENTGRS*12) %>% \n  dplyr::mutate(rentratio = rentyearly/HHINCOME)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(rents, rentratio==0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  `rentratio == 0`     n\n  <lgl>            <int>\n1 FALSE             3439\n2 TRUE              3145\n3 NA                  21\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(is.na(rents$rentratio))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 1266 1519 1527 1765 1766 1998 2019 2020 2827 2873 2890 3990 4037 4373 5229\n[16] 5739 5740 6122 6138 6139 6140\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents[1266,\"rentratio\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  rentratio\n      <dbl>\n1       NaN\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(rents))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 21\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents = na.omit(rents)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents2 = rents %>% \n  filter(rentratio!=0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(density(rents2$HHINCOME))\n```\n\n::: {.cell-output-display}\n![](rents_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(density(rents2$rentratio))\n```\n\n::: {.cell-output-display}\n![](rents_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(rents2, rentratio>=0.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  `rentratio >= 0.3`     n\n  <lgl>              <int>\n1 FALSE               1781\n2 TRUE                1658\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(rents2, rentratio>=0.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  `rentratio >= 0.5`     n\n  <lgl>              <int>\n1 FALSE               2526\n2 TRUE                 913\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents2 = rents2 %>% \n  dplyr::mutate(costbur = ifelse(rentratio<0.3,\"Not CB\",\n                        ifelse(0.3<=rentratio&rentratio<0.5,\"CB\", \"Severely CB\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents2 = rents2 %>% \n  filter(HHINCOME!=0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(rents2$RACE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 7 8 6 4 9 5 3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrace_df = data.frame(RACE = c(1,2,3,4,5,6,7,8,9),\n                        LRACE = c(\"White\", \n               \"Black\",\n               \"Native\",\n               \"Chinese\",\n               \"Japanese\",\n               \"Other Asian\",\n               \"Other\",\n               \"Two Races\",\n               \"Three Races\"))\n\nrents3 = merge(rents2, race_df, by = \"RACE\", all = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents3 = rents3 %>% \n  mutate(LRACE = ifelse(RACE==7,\"Hispanic\",LRACE)) %>% \n  mutate(LRACE = ifelse(LRACE==\"Chinese\"|LRACE==\"Japanese\"|LRACE==\"Other Asian\",\"Asian\",LRACE)) %>%\n  rename(Race=LRACE) %>% \n  group_by(SERIAL) %>% \n  mutate(hhsize = max(PERNUM))%>% \n  mutate(ami = ifelse(hhsize==1&HHINCOME<=78550,1,\n               ifelse(hhsize==2&HHINCOME<=89750,1,\n               ifelse(hhsize==3&HHINCOME<=100950,1,\n               ifelse(hhsize==4&HHINCOME<=112150,1,\n               ifelse(hhsize>=5&HHINCOME<=130100,1,\n                      0)))))) %>% \n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents3 %>% \n  filter(costbur!=\"Not CB\") %>% \n  filter(ami!=0) %>% \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1  1400\n```\n:::\n:::\n\n\n## Tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrents3 %>% \n  filter(ami!=0) %>% \n  filter(costbur!=\"Not CB\") %>%\n  mutate_at(vars(\"Race\"), as.factor) %>% \n  group_by(Race, costbur) %>% \n  summarize(Count = n()) %>%\n  group_by(costbur) %>% \n  mutate(Percent = Count/1400*100) %>% \n  ungroup() %>%\n  mutate(costbur = factor(costbur, levels = c(\"Not CB\",\n                                              \"Severely CB\",\n                                              \"CB\"))) %>%\n  ggplot(aes(x=reorder(Race, desc(Percent)), \n             y=Percent, \n             fill=costbur)) + \n  scale_fill_manual(values = c(\"steelblue\",\n                               \"blue\"),\n                    name = element_blank()) +\n  geom_bar(stat='identity', position= \"stack\") +\n  geom_text(aes(label = round(Percent, 2)),\n            size = 2,\n            position = position_stack(vjust = 0.5),\n            color = \"white\") +\n  theme_minimal() +\n  xlab(element_blank()) +\n  labs(title = \"Cost Burdened Renter Households by Race in Boston\",\n       subtitle = \"Excluding those who do not qualify by 80% AMI\",\n       caption = \"Source: IPUMS USA (2021 ACS), Own Calculations\n       Note: Shares of cost burdened households were derived by deviding annual rent by income\") +\n  theme(legend.position = c(0.85,0.9),\n        title = element_text(size = 10))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Race'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](rents_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents3 %>% \n  group_by(SERIAL) %>% \n  distinct(SERIAL, hhsize, costbur, ami) %>% \n  filter(costbur!=\"Not CB\" & ami!=0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 713 × 4\n# Groups:   SERIAL [713]\n   SERIAL hhsize costbur       ami\n    <dbl>  <dbl> <chr>       <dbl>\n 1 641897      1 Severely CB     1\n 2 636155      6 Severely CB     1\n 3 633351      2 CB              1\n 4 642035      1 Severely CB     1\n 5 633475      2 Severely CB     1\n 6 642054      2 CB              1\n 7 623095      3 Severely CB     1\n 8 633640      3 Severely CB     1\n 9 623115      2 Severely CB     1\n10 642183      1 CB              1\n# … with 703 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents3 %>% \n  group_by(SERIAL) %>% \n  dplyr::select(SERIAL,PERNUM,hhsize,HHINCOME,rentratio,costbur,Race,ami) %>% \n  distinct(SERIAL, hhsize, HHINCOME, rentratio, costbur, ami) %>% \n  mutate(hhsize = ifelse(hhsize>=5, 6, hhsize)) %>%\n  dplyr::mutate_at(vars(hhsize), ~ as.character(.)) %>%\n  mutate(hhsize = ifelse(hhsize==\"6\", \"5+\", hhsize)) %>% \n  filter(ami!=0) %>% \n  filter(costbur!=\"Not CB\") %>% \n  group_by(hhsize, costbur) %>% \n  summarize(Count = n()) %>%\n  group_by(costbur) %>% \n  mutate(Percent = Count/713*100) %>% \n  ungroup() %>%\n  mutate(costbur = factor(costbur, levels = c(\"Not CB\",\n                                              \"Severely CB\",\n                                              \"CB\"))) %>%\n  ggplot(aes(x=reorder(hhsize, desc(Percent)), \n             y=Percent, \n             fill=costbur)) + \n  scale_fill_manual(values = c(\"steelblue\",\n                               \"blue\"),\n                    name = element_blank()) +\n  geom_bar(stat='identity', position= \"stack\") +\n  geom_text(aes(label = round(Percent, 2)),\n            size = 2,\n            position = position_stack(vjust = 0.5),\n            color = \"white\") +\n  theme_minimal() +\n  xlab(\"Number of Household Members\") +\n  labs(title = \"Cost Burdened Renter Households by Size in Boston\",\n       subtitle = \"Excluding those who do not qualify by 80% AMI\",\n       caption = \"Source: IPUMS USA (2021 ACS), Own Calculations\") +\n  theme(legend.position = c(0.85,0.9),\n        title = element_text(size = 10))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'hhsize'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](rents_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(!is.na(unique(rents3$SERIAL)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1576\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents4 = rents3 %>% \n  mutate(ami30 = ifelse(hhsize==1&HHINCOME<=29450,1,\n               ifelse(hhsize==2&HHINCOME<=33650,1,\n               ifelse(hhsize==3&HHINCOME<=37850,1,\n               ifelse(hhsize==4&HHINCOME<=42050,1,\n               ifelse(hhsize>=5&HHINCOME<=48800,1,\n                      0)))))) %>%\n  mutate(ami50 = ifelse(hhsize==1&HHINCOME<=49100,1,\n               ifelse(hhsize==2&HHINCOME<=56100,1,\n               ifelse(hhsize==3&HHINCOME<=63100,1,\n               ifelse(hhsize==4&HHINCOME<=70100,1,\n               ifelse(hhsize>=5&HHINCOME<=81350,1,\n                      0)))))) %>% \n  mutate(ami.cat = ifelse(ami30==1,\"30%<\",\n                   ifelse(ami50==1,\"50%<\",\n                   ifelse(ami==1,\"80%<\",\n                          \"80%>\"))))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrents4 %>% \n  group_by(SERIAL) %>% \n  distinct(SERIAL,ami.cat,costbur) %>% \n  filter(costbur!=\"Not CB\") %>% \n  group_by(ami.cat, costbur) %>% \n  summarize(Count = n()) %>%\n  group_by(costbur) %>% \n  mutate(Percent = Count/796*100) %>% \n  ungroup() %>%\n  mutate(costbur = factor(costbur, levels = c(\"Not CB\",\n                                              \"Severely CB\",\n                                              \"CB\"))) %>%\n  ggplot(aes(x=reorder(ami.cat, desc(Percent)), \n             y=Percent, \n             fill=costbur)) + \n  scale_fill_manual(values = c(\"steelblue\",\n                               \"blue\"),\n                    name = element_blank()) +\n  geom_bar(stat='identity', position= \"stack\") +\n  geom_text(aes(label = round(Percent, 2)),\n            size = 2,\n            position = position_stack(vjust = 0.5),\n            color = \"white\") +\n  theme_minimal() +\n  xlab(\"Most Common AMI thresholds\") +\n  labs(title = \"Cost Burdened Renter Households by AMI % category\nin Boston\",\n       subtitle = \"Household Income as % of AMI\",\n       caption = \"Source: IPUMS USA (2021 ACS), Own Calculations\nNote: Percentages of the households are on the right side\") +\n  theme(legend.position = c(0.85,0.9),\n        title = element_text(size = 10))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'ami.cat'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](rents_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "rents_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}