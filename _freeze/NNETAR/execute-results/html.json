{
  "hash": "c582e43fee03ad083120ead054e41d35",
  "result": {
    "markdown": "---\ntitle: \"Forecasting Conventional Hydroelectric Power Generation in the US using NNETAR\"\nexecute: \n    freeze: auto\nformat: \n  html: \n    code-fold: show\n    code-tools: true\n---\n\n\n\n\nThis is a part 2 to the [Hydropower Project](ETS.qmd) I did before.\n\n## Data Preparation\n\nI am importing my data on the total number of Conventional Hydropower Plants in the US and Monthly Precipitation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nplants <- read_excel(\"EHA_Monthly_Net_Generation.xlsx\", \n    sheet = \"MonthlyNet\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────────────── fpp3 0.5 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ tibble      3.1.8     ✔ tsibble     1.1.3\n✔ dplyr       1.1.0     ✔ tsibbledata 0.4.1\n✔ tidyr       1.2.0     ✔ feasts      0.3.1\n✔ lubridate   1.8.0     ✔ fable       0.3.3\n✔ ggplot2     3.3.5     ✔ fabletools  0.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ───────────────────────────────────────────────── fpp3_conflicts ──\n✖ lubridate::date()    masks base::date()\n✖ dplyr::filter()      masks stats::filter()\n✖ tsibble::intersect() masks base::intersect()\n✖ tsibble::interval()  masks lubridate::interval()\n✖ dplyr::lag()         masks stats::lag()\n✖ tsibble::setdiff()   masks base::setdiff()\n✖ tsibble::union()     masks base::union()\n```\n:::\n\n```{.r .cell-code}\nplants %>% \n  select(Year, Month, Net_Generation_MWh, EHA_PtID) -> plants\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(plants)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n   Year Month Net_Generation_MWh EHA_PtID  \n  <dbl> <chr>              <dbl> <chr>     \n1  2003 APR                    0 hc0115_p01\n2  2003 AUG                    0 hc0115_p01\n3  2003 DEC                    0 hc0115_p01\n4  2003 FEB                    0 hc0115_p01\n5  2003 JAN                    0 hc0115_p01\n6  2003 JUL                  122 hc0115_p01\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(unique(plants$EHA_PtID))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1519\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplants %>%                              \n  group_by(Year, Month) %>%\n  summarise(Count = n_distinct(EHA_PtID)) %>% \n  mutate(Date = yearmonth(paste(Year, Month))) %>% \n  arrange(Date) |>\n  as_tsibble(index = Date) -> plants2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nplants2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 240 x 4 [1M]\n# Groups:    Year [20]\n    Year Month Count     Date\n   <dbl> <chr> <int>    <mth>\n 1  2003 JAN    1386 2003 Jan\n 2  2003 FEB    1386 2003 Feb\n 3  2003 MAR    1386 2003 Mar\n 4  2003 APR    1386 2003 Apr\n 5  2003 MAY    1386 2003 May\n 6  2003 JUN    1386 2003 Jun\n 7  2003 JUL    1386 2003 Jul\n 8  2003 AUG    1386 2003 Aug\n 9  2003 SEP    1386 2003 Sep\n10  2003 OCT    1386 2003 Oct\n# … with 230 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplants2 |>\n  autoplot(Count)\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nprcpt <- read_csv(\"Contiguous_us_Precipitation_data.csv\", \n    skip = 4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 283 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (3): Date, Value, Anomaly\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprcpt |>\n  mutate(date = seq(as.Date(\"2000-01-01\"),\n                    as.Date(\"2023-07-01\"),\n                    by = \"month\"),\n         Date = yearmonth(date)) |>\n  as_tsibble(index = Date) |>\n  select(Date, Value) -> prcpt2\nprcpt2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 283 x 2 [1M]\n       Date Value\n      <mth> <dbl>\n 1 2000 Jan  2.14\n 2 2000 Feb  2.12\n 3 2000 Mar  2.44\n 4 2000 Apr  2.32\n 5 2000 May  2.66\n 6 2000 Jun  3.45\n 7 2000 Jul  2.3 \n 8 2000 Aug  1.91\n 9 2000 Sep  2.18\n10 2000 Oct  2.26\n# … with 273 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprcpt2 |>\n  autoplot() +\n  labs(title = \"Contiguous U.S. Precipitation\",\n       subtitle = \"Jan 2001 - Apr 2023, Monthly\",\n       y = \"Inches\",\n       x = \"Date\",\n       caption = \"Source: National Centers for Environmental Information\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPlot variable not specified, automatically selected `.vars = Value`\n```\n:::\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplants3 <- read_csv(\"RectifHyd_v1.0.csv\", \n    skip = 27)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 324024 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): plant, state, month, EIA_obs_freq, RectifHyd_method, recommended_data\ndbl (6): EIA_ID, year, EIA_fraction, EIA_MWh, RectifHyd_fraction, RectifHyd_MWh\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplants3 %>%    \n  select(EIA_ID, plant, year, month) %>% \n  group_by(year, month) %>%\n  summarise(Count = n_distinct(plant), .groups = \"drop\") %>% \n  mutate(Date = yearmonth(paste(year, month))) %>% \n  arrange(Date) |>\n  as_tsibble(index = Date) -> plants3\nplants3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 240 x 4 [1M]\n    year month Count     Date\n   <dbl> <chr> <int>    <mth>\n 1  2001 Jan    1337 2001 Jan\n 2  2001 Feb    1337 2001 Feb\n 3  2001 Mar    1337 2001 Mar\n 4  2001 Apr    1337 2001 Apr\n 5  2001 May    1337 2001 May\n 6  2001 Jun    1337 2001 Jun\n 7  2001 Jul    1337 2001 Jul\n 8  2001 Aug    1337 2001 Aug\n 9  2001 Sep    1337 2001 Sep\n10  2001 Oct    1337 2001 Oct\n# … with 230 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(plants3$year==2003)[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 25\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplants3[1:24,] |>\n  bind_rows(plants2) |>\n  select(Count, Date) -> plants_t\nplants_t\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 264 x 2 [1M]\n   Count     Date\n   <int>    <mth>\n 1  1337 2001 Jan\n 2  1337 2001 Feb\n 3  1337 2001 Mar\n 4  1337 2001 Apr\n 5  1337 2001 May\n 6  1337 2001 Jun\n 7  1337 2001 Jul\n 8  1337 2001 Aug\n 9  1337 2001 Sep\n10  1337 2001 Oct\n# … with 254 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplants_t |>\n  autoplot() +\n  labs(title = \"The Total Number of Operational Conventional\nHydropower Plants\",\n       subtitle = \"Jan 2001 - Apr 2023, Monthly\",\n       y = \"Plants\",\n       x = \"Date\",\n       caption = \"Source: Existing Hydropower Assets (EHA) Net\nGeneration Plant Database, 2003-2022; RectifHyd\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPlot variable not specified, automatically selected `.vars = Count`\n```\n:::\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro <- read_csv(\"Net_generation_United_States_all_sectors_monthly.csv\", \n    skip = 4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 268 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Month\ndbl (1): conventional hydroelectric thousand megawatthours\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nI am importing the data on Net Energy Generation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro = hydro %>% \n  rename(MWH = \"conventional hydroelectric thousand megawatthours\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro=hydro[order(nrow(hydro):1),]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro = hydro %>% \n  mutate(Date = yearmonth(Month)) |>\n  as_tsibble(index = Date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro %>% \n  autoplot(MWH) +\n  labs(title = \"Net Conventional Hydroelectric Power Generation\",\n       subtitle = \"Jan 2001 - Apr 2023, Monthly\",\n       y = \"Thousand Megawatthours\",\n       x = \"Date\",\n       caption = \"Source: U.S. Energy Information Administration\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro |>\n  left_join(plants_t) |>\n  select(Date, MWH, Count) |>\n  left_join(prcpt2) |>\n  mutate(Count = ifelse(is.na(Count),\n                        1351,\n                        Count)) |> #inputting missing 4 obs with the last ob\n  rename(Precipitation = Value) -> hydro_comp\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(Date)`\nJoining with `by = join_by(Date)`\n```\n:::\n\n```{.r .cell-code}\nhead(hydro_comp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 6 x 4 [1M]\n      Date    MWH Count Precipitation\n     <mth>  <dbl> <dbl>         <dbl>\n1 2001 Jan 18852.  1337          1.85\n2 2001 Feb 17473.  1337          2.21\n3 2001 Mar 20477.  1337          2.57\n4 2001 Apr 18013.  1337          2.1 \n5 2001 May 19176.  1337          2.78\n6 2001 Jun 20728.  1337          3.12\n```\n:::\n:::\n\n\nI am combining all the data into one tsibble.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_comp |>\n  pivot_longer(c(MWH, Count, Precipitation)) |>\n  ggplot(aes(x = Date, y = value)) +\n  geom_line() +\n  facet_grid(name ~ ., scales = \"free_y\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro |> gg_tsdisplay(MWH,\n                     plot_type='partial', lag_max = 24)\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro |>\n  model(stl = STL(MWH)) |>\n  components() |> \n  gg_subseries(season_year) +\n  theme(axis.text.x = element_text(size = 5))\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro |>\n  model(stl = STL(MWH)) |>\n  components() |>\n  autoplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Ignoring unknown parameters: linewidth\n```\n:::\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nSTL decomposition shows high seasonality of the data.\n\n## Preliminary Model Estimation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_obs.hydro = dim(hydro_comp)[1] #puts n of obs into total_obs\ntrain_obs = total_obs.hydro * 0.8\ntest_obs = total_obs.hydro - train_obs\nhydro_train = head(hydro_comp, train_obs)\nhydro_test = tail(hydro_comp, test_obs)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_train |>\n  pivot_longer(c(MWH, Count, Precipitation)) |>\n  ggplot(aes(x = Date, y = value)) +\n  geom_line() +\n  facet_grid(name ~ ., scales = \"free_y\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnn_model = hydro_train |>\n  model(nnetar = NNETAR(MWH ~ Count + Precipitation),\n        Arima.reg = ARIMA(MWH ~ Count + Precipitation))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnn_model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A mable: 1 x 2\n             nnetar                              Arima.reg\n            <model>                                <model>\n1 <NNAR(1,1,2)[12]> <LM w/ ARIMA(1,0,0)(1,1,0)[12] errors>\n```\n:::\n:::\n\n A mable: 1 x 2\n             nnetar                              Arima.reg\n            <model>                                <model>\n1 <NNAR(1,1,2)[12]> <LM w/ ARIMA(1,0,0)(1,1,0)[12] errors>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_train[214,\"Count\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  Count\n  <dbl>\n1  1440\n```\n:::\n\n```{.r .cell-code}\nmean_prcpt = mean(hydro_train$Precipitation)\n\nhydro_train2 = hydro_train[-214,]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nf_scenarios_hydro <- scenarios(\n  Mean = new_data(hydro_train, 54) |>\n    mutate(Count = 1440,\n           Precipitation = mean_prcpt))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_time = Sys.time()\n\nnn_fit = nn_model |>\n  forecast(new_data = f_scenarios_hydro)\n\nprint(Sys.time() - start_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 3.74252 mins\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_train |>\n  autoplot(MWH) +\n  autolayer(nn_fit) +\n  labs(title = \"Net Conventional Hydroelectric Power Generation\nNN Forecast\",\n       subtitle = \"Jan 2001 - Apr 2023, Monthly\",\n       y = \"Thousand Megawatthours\",\n       x = \"Date\",\n       caption = \"Source: U.S. Energy Information Administration\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_test |>\n  autoplot(MWH) +\n  autolayer(nn_fit) +\n  geom_line(aes(y = MWH)) +\n  labs(title = \"Net Conventional Hydroelectric Power Generation\nNN Forecast\",\n       subtitle = \"Nov 2018 - Apr 2023, Monthly\",\n       y = \"Thousand Megawatthours\",\n       x = \"Date\",\n       caption = \"Source: U.S. Energy Information Administration\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnn_fit |>\n  accuracy(hydro_comp) |>\n  select(.model, RMSE, MPE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  .model     RMSE    MPE\n  <chr>     <dbl>  <dbl>\n1 Arima.reg 3688. -11.4 \n2 nnetar    2929.  -2.86\n```\n:::\n:::\n\n\nNeural Networks predict better.\n\n## Comparing NNETAR, ARIMA, and ETS\n\nFor convenience I am using only the last five years of observation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_train2 = hydro_comp[208:256,]\nhydro_test2 = tail(hydro_comp, 12)\nhydro_comp2 = hydro_comp[208:268,]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlagged_arima <- hydro_train2 |>\n  # Restrict data so models use same fitting period\n  mutate(MWH = c(NA, NA, NA, NA, NA, MWH[6:49])) |>\n  model(\n    lag1 = ARIMA(MWH ~ pdq(d = 0)\n                 + lag(Precipitation)\n                 + lag(Count)),\n    lag2 = ARIMA(MWH ~ pdq(d = 0) + lag(Precipitation) +\n                 lag(Precipitation, 2) + lag(Count) + lag(Count, 2)),\n    lag3 = ARIMA(MWH ~ pdq(d = 0) + lag(Precipitation) +\n                 lag(Precipitation, 2) + lag(Precipitation, 3) + lag(Count) + lag(Count, 2) + lag(Count, 3)),\n    lag4 = ARIMA(MWH ~ pdq(d = 0) + lag(Precipitation) +\n                 lag(Precipitation, 2) + lag(Precipitation, 3) + lag(Precipitation, 4) + lag(Count) + lag(Count, 2) + lag(Count, 3) + lag(Count, 4)),\n    lag5 = ARIMA(MWH ~ pdq(d = 0) + lag(Precipitation) +\n                 lag(Precipitation, 2) + lag(Precipitation, 3) + lag(Precipitation, 4) + lag(Precipitation, 5) + lag(Count) + lag(Count, 2) + lag(Count, 3) + lag(Count, 4) + lag(Count, 5))\n  )\n\nglance(lagged_arima)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 8\n  .model   sigma2 log_lik   AIC  AICc   BIC ar_roots  ma_roots \n  <chr>     <dbl>   <dbl> <dbl> <dbl> <dbl> <list>    <list>   \n1 lag1   3085088.   -286.  579.  581.  586. <cpl [0]> <cpl [1]>\n2 lag2   3207038.   -285.  583.  585.  592. <cpl [0]> <cpl [1]>\n3 lag3   3136314.   -284.  584.  589.  597. <cpl [0]> <cpl [1]>\n4 lag4   2900213.   -282.  583.  592.  599. <cpl [0]> <cpl [1]>\n5 lag5   2973819.   -281.  585.  598.  605. <cpl [0]> <cpl [1]>\n```\n:::\n:::\n\n\nBased on AICc, I am choosing lag1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnn_model2 = hydro_train2 |>\n  model(nnetar2 = NNETAR(MWH ~ Count + Precipitation),\n        Arima.reg2 = ARIMA(MWH ~ lag(Count) + lag(Precipitation),\n                           stepwise = FALSE,\n                           approx = FALSE),\n        ETS = ETS(MWH))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlagged_count = hydro_train2$Count[38:49]\nlagged_prcpt = hydro_train2$Precipitation[38:49]\n#I am creating a list of the last 12 values from the hydro_train2.\nmean_count = rep(mean(mean(hydro_train2$Count)), times=12)\nmean_prcpt = rep(mean(mean(hydro_train2$Precipitation)), times=12)\n#I am creating a list of the 12 repeating values equaling the average observation from the training set.\n\nfuture_scenarios <- scenarios(\n  Lagged = new_data(hydro_train2, 12) |>\n    mutate(Count=lagged_count,\n           Precipitation = lagged_prcpt),\n  Mean = new_data(hydro_train2, 12) |>\n    mutate(Count = mean_count,\n           Precipitation = mean_prcpt),\n  names_to = \"Forecast Scenarios\")\n#By putting lagged_vars, I am using the last 12 values of hydro_train2 as the values in the future_scenarios. This way I am creating new values lagged at 12: April 2023 will equal April 2022, etc. Thus, I can use them as the predictors for my forecast. The same is with the Mean values.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_time = Sys.time()\n\nnn_fit2 = nn_model2 |>\n  forecast(new_data = future_scenarios)\n\nprint(Sys.time() - start_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 2.633055 mins\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_test2 = hydro_test2[,c(\"Date\",\"MWH\")]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(hilo(nn_fit2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  `Forecast Scenarios` .model      Date          MWH  .mean Count Precipitation\n  <chr>                <chr>      <mth>       <dist>  <dbl> <dbl>         <dbl>\n1 Lagged               nnetar2 2022 May sample[5000] 21545.  1276          2.98\n2 Lagged               nnetar2 2022 Jun sample[5000] 21850.  1276          2.97\n3 Lagged               nnetar2 2022 Jul sample[5000] 21306.  1276          3.41\n4 Lagged               nnetar2 2022 Aug sample[5000] 20481.  1276          3.14\n5 Lagged               nnetar2 2022 Sep sample[5000] 17878.  1276          2.39\n6 Lagged               nnetar2 2022 Oct sample[5000] 17819.  1276          3.15\n# … with 2 more variables: `80%` <hilo>, `95%` <hilo>\n```\n:::\n:::\n\n\nHere is the plot of the training data and the forecast.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_train2 |>\n  autoplot(MWH) +\n  autolayer(nn_fit2, level = NULL)\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\nHere is the plot of the actual data and the forecast.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_test2 |>\n  autoplot(MWH) +\n  autolayer(nn_fit2, level = NULL)\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnn_fit2 %>% \n  filter(`Forecast Scenarios`==\"Lagged\") |>\n  accuracy(hydro_comp2) |>\n  select(.model, RMSE, MPE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  .model      RMSE   MPE\n  <chr>      <dbl> <dbl>\n1 Arima.reg2 2585. -5.78\n2 ETS        2181.  4.16\n3 nnetar2    2430. -2.24\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnn_fit2 %>% \n  filter(`Forecast Scenarios`==\"Mean\") |>\n  accuracy(hydro_comp2) |>\n  select(.model, RMSE, MPE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  .model      RMSE    MPE\n  <chr>      <dbl>  <dbl>\n1 Arima.reg2 3267. -12.9 \n2 ETS        2181.   4.16\n3 nnetar2    2270.  -4.33\n```\n:::\n:::\n\n\nWe can see that ETS has the lowest RMSE, while NNETAR with external regressors lagged at 12 has the lowest MPE.\n\nNow I creating an ensemble model that averages the predictions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_time = Sys.time()\n\nnn_ensemble = hydro_train2 |>\n  model(Ensemble = (NNETAR(MWH ~ Count + Precipitation) +\n                     ARIMA(MWH ~ lag(Count) + lag(Precipitation),\n                           stepwise = FALSE,\n                           approx = FALSE) +\n                     ETS(MWH))/3)\n\nprint(Sys.time() - start_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 6.888192 secs\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnn_fit2.nsmbl = nn_ensemble |>\n  forecast(new_data = future_scenarios)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhydro_test2 |>\n  autoplot(MWH) +\n  autolayer(nn_fit2.nsmbl, level = NULL)\n```\n\n::: {.cell-output-display}\n![](NNETAR_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnn_fit2.nsmbl %>% \n  filter(`Forecast Scenarios`==\"Mean\") |>\n  accuracy(hydro_comp2) |>\n  select(.model, RMSE, MPE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .model    RMSE   MPE\n  <chr>    <dbl> <dbl>\n1 Ensemble 2017. -4.57\n```\n:::\n:::\n\n\nThe average prediction, is the best one, in terms of variance (RMSE). However, NNETAR is still better in terms of bias (MPE).\n\n",
    "supporting": [
      "NNETAR_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}