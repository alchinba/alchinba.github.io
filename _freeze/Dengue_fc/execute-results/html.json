{
  "hash": "f8424785682669900c345d14ef1d5aaa",
  "result": {
    "markdown": "---\ntitle: \"Dengue Fever\"\nexecute: \n    freeze: auto\nformat: \n  html: \n    code-fold: show\n    code-tools: true\n---\n\n\n\n\n## Significance\n\nDengue fever is a virus that is spread to people through the bite of an infected mosquito. A severe dengue fever case can lead to circulatory system failure, shock, and even death. Almost half of the world’s population, about 4 billion people, live in areas with a risk of dengue. Studying and forecasting the total number of infection incidents can help to tame this disease.\n\nI am using the fpp3 package to forecast the next total weekly cases of Dengue fever two cities in Peru and Puerto Rico.\n\nThe dataset is from [drivendata.org](https://www.drivendata.org/competitions/44/dengai-predicting-disease-spread/) competition.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────────────── fpp3 0.5 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ tibble      3.1.8     ✔ tsibble     1.1.3\n✔ dplyr       1.1.0     ✔ tsibbledata 0.4.1\n✔ tidyr       1.2.0     ✔ feasts      0.3.1\n✔ lubridate   1.8.0     ✔ fable       0.3.3\n✔ ggplot2     3.3.5     ✔ fabletools  0.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ───────────────────────────────────────────────── fpp3_conflicts ──\n✖ lubridate::date()    masks base::date()\n✖ dplyr::filter()      masks stats::filter()\n✖ tsibble::intersect() masks base::intersect()\n✖ tsibble::interval()  masks lubridate::interval()\n✖ dplyr::lag()         masks stats::lag()\n✖ tsibble::setdiff()   masks base::setdiff()\n✖ tsibble::union()     masks base::union()\n```\n:::\n:::\n\n\nI am importing and combining the data on the number of cases and 20 possible predictor variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\ndengue_fts <- read_csv(\"DengAI_Predicting_Disease_Spread_-_Training_Data_Features.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1456 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (1): city\ndbl  (22): year, weekofyear, ndvi_ne, ndvi_nw, ndvi_se, ndvi_sw, precipitati...\ndate  (1): week_start_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_label <- read_csv(\"DengAI_Predicting_Disease_Spread_-_Training_Data_Labels.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1456 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): city\ndbl (3): year, weekofyear, total_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_label |>\n  left_join(dengue_fts,\n            by = c(\"city\",\n                   \"year\",\n                   \"weekofyear\")) -> dengue\n```\n:::\n\n\nI am performing a quick random test to see if everything matches up.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_fts$reanalysis_dew_point_temp_k[256]==dengue$reanalysis_dew_point_temp_k[256]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nI am transforming the combined dataset into a tsibble, the format for fpp3 package. The newly created year_week is an index variable and the two cities are keys to treat their observations as separate time series.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue |>\n  mutate(year_week = yearweek(week_start_date)) |>\n  as_tsibble(key = city,\n             index = year_week) |>\n  arrange(desc(city)) -> dengue_ts\n```\n:::\n\n\nHere is the plot fro both cities.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts |>\n  #filter(city==\"sj\") |>\n  autoplot(total_cases) +\n  labs(title = \"Total Cases of Dengue fever in San Juan and Iquitos\",\n       subtitle = \"April 1990 - June 2010, Weekly\",\n       y = \"Total Cases\",\n       x = \"Date\",\n       caption = \"Source: U.S. Centers for Disease Control and prevention\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nWe can see that the data for San Juan and Iquitos span different time periods but still overlap. We can also observe that most of the time the total number of cases is less than 50, however there are numerous spikes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(density(dengue_ts$total_cases))\nabline(v = 50, col = \"red\", lty = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts |>\n  filter(city==\"sj\") |>\n  tail(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 1 x 26 [1W]\n# Key:       city [1]\n  city   year weekofyear total_cases week_start_date ndvi_ne ndvi_nw ndvi_se\n  <chr> <dbl>      <dbl>       <dbl> <date>            <dbl>   <dbl>   <dbl>\n1 sj     2008         17           5 2008-04-22       -0.037 -0.0104  0.0773\n# … with 18 more variables: ndvi_sw <dbl>, precipitation_amt_mm <dbl>,\n#   reanalysis_air_temp_k <dbl>, reanalysis_avg_temp_k <dbl>,\n#   reanalysis_dew_point_temp_k <dbl>, reanalysis_max_air_temp_k <dbl>,\n#   reanalysis_min_air_temp_k <dbl>, reanalysis_precip_amt_kg_per_m2 <dbl>,\n#   reanalysis_relative_humidity_percent <dbl>,\n#   reanalysis_sat_precip_amt_mm <dbl>,\n#   reanalysis_specific_humidity_g_per_kg <dbl>, reanalysis_tdtr_k <dbl>, …\n```\n:::\n\n```{.r .cell-code}\ndengue_ts |>\n  filter(city==\"iq\") |>\n  tail(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 1 x 26 [1W]\n# Key:       city [1]\n  city   year weekofyear total_cases week_start_date ndvi_ne ndvi_nw ndvi_se\n  <chr> <dbl>      <dbl>       <dbl> <date>            <dbl>   <dbl>   <dbl>\n1 iq     2010         25           4 2010-06-25        0.298   0.233   0.274\n# … with 18 more variables: ndvi_sw <dbl>, precipitation_amt_mm <dbl>,\n#   reanalysis_air_temp_k <dbl>, reanalysis_avg_temp_k <dbl>,\n#   reanalysis_dew_point_temp_k <dbl>, reanalysis_max_air_temp_k <dbl>,\n#   reanalysis_min_air_temp_k <dbl>, reanalysis_precip_amt_kg_per_m2 <dbl>,\n#   reanalysis_relative_humidity_percent <dbl>,\n#   reanalysis_sat_precip_amt_mm <dbl>,\n#   reanalysis_specific_humidity_g_per_kg <dbl>, reanalysis_tdtr_k <dbl>, …\n```\n:::\n:::\n\n\nMost of the models cannot work with gaps in time, so I am checking for explicit gaps.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhas_gaps(dengue_ts, .full = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  city  .gaps\n  <chr> <lgl>\n1 iq    TRUE \n2 sj    TRUE \n```\n:::\n:::\n\n\nBoth cities have gaps, so I am filling gaps and using the previous value to fill them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(zoo)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'zoo'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tsibble':\n\n    index\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts |>\n  fill_gaps() %>%\n  mutate_all( ~ na.locf(.x, na.rm = FALSE)) -> dengue_ts_c\n```\n:::\n\n\nI am checking if there are any missing values left.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(dengue_ts_c))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                 city                                  year \n                                    0                                     0 \n                           weekofyear                           total_cases \n                                    0                                     0 \n                      week_start_date                               ndvi_ne \n                                    0                                     0 \n                              ndvi_nw                               ndvi_se \n                                    0                                     0 \n                              ndvi_sw                  precipitation_amt_mm \n                                    0                                     0 \n                reanalysis_air_temp_k                 reanalysis_avg_temp_k \n                                    0                                     0 \n          reanalysis_dew_point_temp_k             reanalysis_max_air_temp_k \n                                    0                                     0 \n            reanalysis_min_air_temp_k       reanalysis_precip_amt_kg_per_m2 \n                                    0                                     0 \n reanalysis_relative_humidity_percent          reanalysis_sat_precip_amt_mm \n                                    0                                     0 \nreanalysis_specific_humidity_g_per_kg                     reanalysis_tdtr_k \n                                    0                                     0 \n                   station_avg_temp_c               station_diur_temp_rng_c \n                                    0                                     0 \n                   station_max_temp_c                    station_min_temp_c \n                                    0                                     0 \n                    station_precip_mm                             year_week \n                                    0                                     0 \n```\n:::\n:::\n\n\nThere are no missing values in the dengue_ts_c.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  #filter(city==\"sj\") |>\n  autoplot(total_cases)\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nIt seems that there is some seasonality present. The seasonal plot shows that most of the spikes happen in the same months.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  gg_season(total_cases)\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nI am performing an STL decomposition to identify seasonality and trend, if any.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  filter(city==\"sj\") |>\n  model(\n    STL(total_cases)\n  ) |>\n  components() |>\n  autoplot() +\n  labs(title = \"STL decomposition for San Juan\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Ignoring unknown parameters: linewidth\n```\n:::\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  filter(city==\"iq\") |>\n  model(\n    STL(total_cases)\n  ) |>\n  components() |>\n  autoplot() +\n  labs(title = \"STL decomposition for Iquitos\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Ignoring unknown parameters: linewidth\n```\n:::\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nIt seems that there is some seasonality when all the spikes are in the remainder. There also might be a slight increase in the trend for Iquitos.\n\nI am creating an ordered list of all the climate-related variables, descending from the highest correlation with the total cases to lowest.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(dengue_ts_c[,c(6:25)],\n    dengue_ts_c[,4]) |>\n  as.table() |>\n  as.data.frame() |>\n  select(-Var2) |>\n  arrange(desc(Freq))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                    Var1        Freq\n1              reanalysis_min_air_temp_k  0.32528700\n2                     station_min_temp_c  0.26445735\n3                  reanalysis_air_temp_k  0.26295412\n4                  reanalysis_avg_temp_k  0.14823702\n5            reanalysis_dew_point_temp_k  0.13943398\n6  reanalysis_specific_humidity_g_per_kg  0.12666319\n7                     station_avg_temp_c  0.11350812\n8        reanalysis_precip_amt_kg_per_m2 -0.01146877\n9                     station_max_temp_c -0.04013282\n10                  precipitation_amt_mm -0.04243715\n11          reanalysis_sat_precip_amt_mm -0.04243715\n12                     station_precip_mm -0.07344970\n13  reanalysis_relative_humidity_percent -0.13335667\n14                               ndvi_sw -0.14512247\n15                               ndvi_nw -0.16844856\n16             reanalysis_max_air_temp_k -0.19310534\n17                               ndvi_ne -0.20513633\n18                               ndvi_se -0.21315790\n19               station_diur_temp_rng_c -0.23704112\n20                     reanalysis_tdtr_k -0.27946425\n```\n:::\n:::\n\n\nThere seems to be no really strong correlation between the total cases and any individual predictor. Nevertheless, I am going to use this ranking when choosing the variables for time-consuming models.\n\nHere are plots of the variables with the highest correlations (in absolute values).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c %>% \n  #filter(total_cases<=100) %>% \n  ggplot(aes(total_cases,\n             reanalysis_min_air_temp_k,\n             color = year)) +\n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c %>% \n  #filter(total_cases<=100) %>% \n  ggplot(aes(total_cases,\n             reanalysis_tdtr_k,\n             color = year)) +\n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nHere is the plot of all three variables stacked. There seems to be no obvious relationship between the predictors and the spikes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts |>\n  filter(city==\"sj\") |>\n  pivot_longer(c(total_cases,\n                 reanalysis_min_air_temp_k,\n                 reanalysis_tdtr_k)) |>\n  ggplot(aes(x = year_week, y = value)) +\n  geom_line() +\n  facet_grid(name ~ ., scales = \"free_y\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nWe can also observe relatively high correlation between the cases in one week and the week before.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts |>\n  filter(city==\"sj\",\n         total_cases<=100) |>\n  gg_lag(y = total_cases,\n         lags = 1:8,\n         geom = \"point\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## Outliers\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  filter(city==\"iq\") |>\n  ggplot(aes(total_cases)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nI am creating a dummy identifying if there was a spike in weekly cases.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  mutate(outlier = ifelse(total_cases>=100&city==\"sj\",\n                          1,\n                          ifelse(total_cases>=15&city==\"iq\",\n                                 1,\n                                 0)\n                          )) -> dengue_100up\n```\n:::\n\n\nHere is a visual representation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_100up %>% \n  filter(city==\"sj\") %>% \n  ggplot(aes(x = year_week, y = total_cases)) +\n  geom_rect(aes(xmin = lag(year_week),\n                  xmax = year_week,\n                  ymin = 0, \n                  ymax = Inf, \n                  fill = outlier == 1), \n                  alpha = 0.5) +\n  geom_line() +\n  scale_fill_manual(values = c(\"transparent\", \n                               \"red\"),\n                    guide = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (geom_rect).\n```\n:::\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nI am then creating a new list based on the variables' correlation with the spike incidents.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(dengue_100up[,c(6:25)],\n    dengue_100up[,27]) |>\n  as.table() |>\n  as.data.frame() |>\n  select(-Var2) |>\n  arrange(desc(Freq))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                    Var1         Freq\n1                     station_max_temp_c  0.198169569\n2  reanalysis_specific_humidity_g_per_kg  0.184571781\n3                     station_avg_temp_c  0.180714057\n4            reanalysis_dew_point_temp_k  0.174252235\n5              reanalysis_max_air_temp_k  0.157736465\n6                station_diur_temp_rng_c  0.145657342\n7   reanalysis_relative_humidity_percent  0.137849906\n8                  reanalysis_avg_temp_k  0.130503427\n9                   precipitation_amt_mm  0.117053029\n10          reanalysis_sat_precip_amt_mm  0.117053029\n11                     reanalysis_tdtr_k  0.107245826\n12                               ndvi_nw  0.101885734\n13       reanalysis_precip_amt_kg_per_m2  0.099191371\n14                               ndvi_ne  0.092681542\n15                               ndvi_sw  0.091356494\n16                    station_min_temp_c  0.080883428\n17                     station_precip_mm  0.071557679\n18                 reanalysis_air_temp_k  0.066923290\n19                               ndvi_se  0.006051806\n20             reanalysis_min_air_temp_k -0.018410823\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts |>\n  filter(city==\"sj\") |>\n  pivot_longer(c(total_cases,\n                 station_max_temp_c,\n                 reanalysis_specific_humidity_g_per_kg)) |>\n  ggplot(aes(x = year_week, y = value)) +\n  geom_line() +\n  facet_grid(name ~ ., scales = \"free_y\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\nNo obvious relationship between the spikes and the two variables.\n\nAfter looking at the data, I am proceeding to create the forecast models.\n\n## STL decomposition and non-seasonal method\n\nAccording to Hyndman, et al., the simplest method is STL decomposition with a non-seasonal model applied to the seasonally adjusted data. I am creating a decomposition model with STL and non-seasonal ETS.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecomposition_model(\n  STL(total_cases),\n  ETS(season_adjust ~ season(\"N\"))\n) -> den_dcmp_envm\n\ndengue_ts_c |>\n  model(stl_ets = den_dcmp_envm) |>\n  forecast(h = \"5 years\") -> den_dcmp_fc\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_dcmp_fc |>\n  autoplot(dengue_ts_c) +\n  labs(title = \"Decomposition and STL forecast\",\n       y = \"Total Cases\",\n       x = \"Date\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nI am forecasting 5 years for both of the cities to then cut the last two years of Iquitos.\n\nDue to its simplicity, it is similar to Seasonal Naive.\n\n## ARIMA w/ Fourier\n\nHere, I am creating an ARIMA model where seasonality is captured by Fourier series. \n\nI am creating several models with increasing number of K to then choose one based on the AICc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  model(\n    K1 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 1)),\n    K2 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 2)),\n    K3 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 3)),\n    K4 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 4)),\n    K5 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 5)),\n    K6 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 6)),\n    K12 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 12)),\n    K15 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 15)),\n    K26 = ARIMA(total_cases ~ PDQ(0, 0, 0) + fourier(K = 26)),\n        ) -> dengue_arima3\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglance(dengue_arima3) |>\n  select(city, .model, AICc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18 × 3\n   city  .model  AICc\n   <chr> <chr>  <dbl>\n 1 iq    K1     3539.\n 2 iq    K2     3543.\n 3 iq    K3     3545.\n 4 iq    K4     3546.\n 5 iq    K5     3548.\n 6 iq    K6     3549.\n 7 iq    K12    3545.\n 8 iq    K15    3549.\n 9 iq    K26    3571.\n10 sj    K1     7521.\n11 sj    K2     7520.\n12 sj    K3     7523.\n13 sj    K4     7525.\n14 sj    K5     7529.\n15 sj    K6     7532.\n16 sj    K12    7543.\n17 sj    K15    7548.\n18 sj    K26    7565.\n```\n:::\n:::\n\n\nThe larger numbers of K worsen the AICc. Only the model for San Juan is slightly better at K = 2. Nevertheless, since the improvement is small, to stay consistent, I keep K = 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_arima3 |>\n  select(K1) |>\n  forecast(h = \"5 years\") -> den_arima_fc\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_arima_fc |>\n  autoplot(dengue_ts_c) +\n  labs(title = \"ARIMA with Fourier forecast\",\n       y = \"Total Cases\",\n       x = \"Date\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n## NNETAR\n\nThe third model is Neural Networks. This is the most time consuming model, but the results can be very promising.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nden_nn_model = dengue_ts_c |>\n  model(nnetar = NNETAR(total_cases))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_time = Sys.time()\n\nden_nn_model |>\n  forecast(h = \"3 years\") -> den_nn_fc\n\nprint(Sys.time() - start_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 19.48274 mins\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_nn_fc |>\n  autoplot(dengue_ts_c) +\n  labs(title = \"NNETAR with no external regs forecast\",\n       y = \"Total Cases\",\n       x = \"Date\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\nHere we can see that the model for Iquitos picked up the trend but then flattened out, which doesn't look good. The model for San Juan, however looks promising but also looses all seasonality later on.\n\nI am no trying NNETAR with external regressors:\nstation_max_temp_c\t\nreanalysis_specific_humidity_g_per_kg\t\nreanalysis_min_air_temp_k\nreanalysis_air_temp_k.\n\nHowever, in order to use them, I need features from the test data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nden_test_fts <- read_csv(\"DengAI_Predicting_Disease_Spread_-_Test_Data_Features.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 416 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (1): city\ndbl  (22): year, weekofyear, ndvi_ne, ndvi_nw, ndvi_se, ndvi_sw, precipitati...\ndate  (1): week_start_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nThe test dataset also has some gaps, so I am filling them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nden_test_fts |>\n  mutate(year_week = yearweek(week_start_date)) |>\n  as_tsibble(key = city,\n             index = year_week) |>\n  fill_gaps() %>% \n  mutate_all( ~ na.locf(.x, na.rm = FALSE)) %>% \n  arrange(desc(city)) -> den_test_ts2\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_nn_model2 = dengue_ts_c |>\n  model(nnetar = NNETAR(total_cases ~ station_max_temp_c +\n                          reanalysis_specific_humidity_g_per_kg +\n                          reanalysis_min_air_temp_k +\n                          reanalysis_air_temp_k))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_time = Sys.time()\n\nden_nn_model2 |>\n  forecast(new_data = den_test_ts2) -> den_nn_fc2\n\nprint(Sys.time() - start_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime difference of 26.52379 mins\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_nn_fc2 |>\n  autoplot(dengue_ts_c) +\n  labs(title = \"NNETAR w/ Regressors forecast\",\n       y = \"Total Cases\",\n       x = \"Date\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\nThe resulting forecast looks very promising, indeed. The prediction intervals also seem to cover most of the probable observations, without getting into negative territory.\n\n## ARIMA w/ Regressors\n\nTo incorporate more predictor variables from the dataset, I am using another ARIMA model with external regressors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  model(ARIMA.reg = ARIMA(total_cases ~ PDQ(0, 0, 0) + \n                            reanalysis_min_air_temp_k +\n                            reanalysis_air_temp_k +\n                            station_min_temp_c)) -> den_arreg_fit\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_arreg_fit |>\n  forecast(new_data = den_test_ts2) -> den_arreg_fc2\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_arreg_fc2 |>\n  autoplot(dengue_ts_c)\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\nUsing only the variables with highest correlation doesn't seem to improve the forecast, all that much. Therefore, I am going to use all of them. I am also adding Fourier for seasonality.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(dengue_ts_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"city\"                                 \n [2] \"year\"                                 \n [3] \"weekofyear\"                           \n [4] \"total_cases\"                          \n [5] \"week_start_date\"                      \n [6] \"ndvi_ne\"                              \n [7] \"ndvi_nw\"                              \n [8] \"ndvi_se\"                              \n [9] \"ndvi_sw\"                              \n[10] \"precipitation_amt_mm\"                 \n[11] \"reanalysis_air_temp_k\"                \n[12] \"reanalysis_avg_temp_k\"                \n[13] \"reanalysis_dew_point_temp_k\"          \n[14] \"reanalysis_max_air_temp_k\"            \n[15] \"reanalysis_min_air_temp_k\"            \n[16] \"reanalysis_precip_amt_kg_per_m2\"      \n[17] \"reanalysis_relative_humidity_percent\" \n[18] \"reanalysis_sat_precip_amt_mm\"         \n[19] \"reanalysis_specific_humidity_g_per_kg\"\n[20] \"reanalysis_tdtr_k\"                    \n[21] \"station_avg_temp_c\"                   \n[22] \"station_diur_temp_rng_c\"              \n[23] \"station_max_temp_c\"                   \n[24] \"station_min_temp_c\"                   \n[25] \"station_precip_mm\"                    \n[26] \"year_week\"                            \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  model(ARIMA.reg = ARIMA(total_cases ~ PDQ(0, 0, 0) + \n                            ndvi_ne + ndvi_nw + ndvi_se + ndvi_sw +\n                            precipitation_amt_mm + \n                            reanalysis_air_temp_k + \n                            reanalysis_avg_temp_k +\n                            reanalysis_dew_point_temp_k +\n                            reanalysis_max_air_temp_k +\n                            reanalysis_min_air_temp_k +\n                            reanalysis_relative_humidity_percent +\n                            reanalysis_specific_humidity_g_per_kg +\n                            reanalysis_precip_amt_kg_per_m2 +\n                            reanalysis_tdtr_k +\n                            station_avg_temp_c +\n                            station_diur_temp_rng_c +\n                            station_max_temp_c +\n                            station_min_temp_c +\n                            station_precip_mm +\n                            fourier(K = 1)))->den_arreg_fit2\n\n#Removed reanalysis_sat_precip_amt_mm to avoid rank deficiency\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_arreg_fit2 |>\n  forecast(new_data = den_test_ts2) -> den_arreg_fc3\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_arreg_fc3 |>\n  autoplot(dengue_ts_c)\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\nThe forecast looks better now, but it looks too clean compared to the previous values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ts_c |>\n  model(ARIMA.reg = ARIMA(total_cases ~ PDQ(0, 0, 0) + \n                            ndvi_ne + ndvi_nw + ndvi_se + ndvi_sw +\n                            precipitation_amt_mm + \n                            reanalysis_air_temp_k + \n                            reanalysis_avg_temp_k +\n                            reanalysis_dew_point_temp_k +\n                            reanalysis_max_air_temp_k +\n                            reanalysis_min_air_temp_k +\n                            reanalysis_relative_humidity_percent +\n                            reanalysis_specific_humidity_g_per_kg +\n                            reanalysis_precip_amt_kg_per_m2 +\n                            reanalysis_tdtr_k +\n                            station_avg_temp_c +\n                            station_diur_temp_rng_c +\n                            station_max_temp_c +\n                            station_min_temp_c +\n                            station_precip_mm +\n                            season()))->den_arreg_fit3\n\n#Removed reanalysis_sat_precip_amt_mm to avoid rank deficiency\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_arreg_fit3 |>\n  forecast(new_data = den_test_ts2) -> den_arreg_fc4\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nden_arreg_fc4 |>\n  autoplot(dengue_ts_c) +\n  labs(title = \"ARIMA w/ Regressors and Seasonality forecast\",\n       y = \"Total Cases\",\n       x = \"Date\")\n```\n\n::: {.cell-output-display}\n![](Dengue_fc_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\nThe same ARIMA model with seasonality included looks better than that with Fourier but worse than NNETAR.\n\n## Results\n\nI had to upload the forecasts to the drivendata.org to obtain the evaluation of the models. The forecast used the observations at time T to forecast the number of cases at time T, because it was a forecast for the internally missing data.\n\nI also had to manually remove some 3 observations from the predictions, since the evaluation dataset didn't have some dates.\n\nGiven the Score and the Rank, NNETAR model is by far the best one. Decomposition model's performance was quite low, ARIMA with seasonality and external regressors got a score of 25.93 and rank of 2042. NNETAR did better by a wide margin: the MAE score of 22.48 and rank of 512. This is out of approximately 12 thousand participants.\n\nThe respective submission IDs are id-240847, id-240852, and id-240853.\n\n## Further work\n\nAdding more external variables will most probably increase the performance of NNETAR model. There also might be some calendar variables that should be included. For example, in the beginning we saw that the spikes occur in the same months. Adding dummies for high number months might improve the forecasts.\n",
    "supporting": [
      "Dengue_fc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}