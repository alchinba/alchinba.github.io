{
  "hash": "13f8b4b8ce7a51c63878e919288c18d2",
  "result": {
    "markdown": "---\ntitle: \"Cluster Analysis IPL\"\nexecute: \n    freeze: auto\nformat: \n  html: \n    code-fold: show\n    code-tools: true\n---\n\n\n\n\n## Instroduction\n\nHere I explore the performance of the Indian Premier League batsmen in cricket. The dataset includes the popular performance metrics for 92 players: Average, Total Runs, Strike Rate, Hundreds, Fifties, Fours, Sixes, and salaries. In short, the higher the value of the metrics, the better a batsman is. The Average reflects the total number of runs scored divided by the number of innings in a season. The SR is calculated by dividing the number of runs scored by the number of balls faced and then multiplying by 100. It shows if a batsman scores runs at a faster pace. The rest of the metrics reflect the numbers of times a player scored, for example, fifty or more runs per inning. An inning is a team's turn to bat.\n\nI am analyzing the correspondence of the players' pay and their performance. I am going to look at SR and Avg. These two metrics should be of critical meaning since they signal the relative performance. In other words, if we compare two player’s SR (Strikes Rate) rather than absolute scores, we can observe their ability to score high (runs per 100 balls faced). This is more clear than absolute numbers of runs, since batsmen have to be called to face the ball, which can skew the final number. The same could be said about Avg.\n\n## Data Exploration\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nCricket_Data <- read_excel(\"The Indian Premier League Supplemental Data.xlsx\", \n    sheet = \"Sheet1\", col_types = c(\"numeric\", \n        \"skip\", \"text\", \"text\", \"numeric\", \n        \"numeric\", \"numeric\", \"numeric\", \n        \"numeric\", \"numeric\", \"numeric\", \n        \"numeric\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...1`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(psych) #describe()\nlibrary(summarytools) #descr()\n```\n:::\n\n\nHere is a quick preview of the dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(Cricket_Data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 11\n   ...1 Player       Team   Runs   Avg    SR Hundreds Fifties Fours Sixes Salary\n  <dbl> <chr>        <chr> <dbl> <dbl> <dbl>    <dbl>   <dbl> <dbl> <dbl>  <dbl>\n1     1 AB de Villi… Roya…   442  44.2 154          0       5    31    26  1.72 \n2     2 Ajinkya Rah… Raja…   393  32.8 138.         1       1    45     9  0.625\n3     3 Akshdeep Na… Roya…    61  12.2 107.         0       0     5     2  0.514\n4     4 Ambati Rayu… Chen…   282  23.5  93.1        0       1    20     7  0.344\n5     5 Andre Russe… Kolk…   510  56.7 205.         0       4    31    52  1.33 \n6     6 Axar Patel   Roya…   110  18.3 125          0       0    10     3  0.714\n```\n:::\n:::\n\n\nHere we can see a table of descriptive statistics for the performance metrics:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndescr(Cricket_Data[, -c(1,2,3)],  #without ...1, Player, Team\n      stats = c(\"mean\", \"sd\",\"med\", \"min\", \"max\"), \n      transpose = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDescriptive Statistics  \nCricket_Data  \nN: 70  \n\n                   Mean   Std.Dev   Median     Min      Max\n-------------- -------- --------- -------- ------- --------\n           Avg    28.58     14.89    27.07    3.60    83.20\n       Fifties     1.49      1.73     1.00    0.00     8.00\n         Fours    22.40     16.84    19.00    1.00    64.00\n      Hundreds     0.09      0.28     0.00    0.00     1.00\n          Runs   249.26    168.75   216.50   12.00   692.00\n        Salary     0.91      0.67     0.70    0.03     2.66\n         Sixes    10.51      9.57     8.00    0.00    52.00\n            SR   133.12     25.18   133.31   63.15   204.81\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ggplot2'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:psych':\n\n    %+%, alpha\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n✔ purrr   1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ ggplot2::%+%()   masks psych::%+%()\n✖ ggplot2::alpha() masks psych::alpha()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ tibble::view()   masks summarytools::view()\n```\n:::\n:::\n\nHere I plot the Salary against the Avg.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCricket_Data %>% \n  ggplot(aes(x=Avg, y=Salary)) +\n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nWe can see that generally a higher Avg is associated with higher salary.\n\nI now plot SR against the Salary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCricket_Data %>% \n  ggplot(aes(x=SR, y=Salary)) +\n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nHere we can observe almost no visual relationship between the two.\n\nI then build a simple correlation matrix to see which metrics are highly correlated with salary:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCricket_Data[, -c(1,2,3)] %>% \n  cor() %>% \n  as.data.frame() %>% \n  dplyr::select(Salary) |>\n  arrange(desc(Salary))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Salary\nSalary   1.0000000\nRuns     0.3234302\nAvg      0.2919955\nFifties  0.2900521\nFours    0.2550323\nSixes    0.2468059\nHundreds 0.2331481\nSR       0.1055668\n```\n:::\n:::\n\n\nWe observe a positive but weak correlation between Salary and most performance metrics. SR, however, has the lowest correlation.\n\nI generate boxplots for both metrics with outliers named, so we can see the distribution of the data and the names of the players who score the highest. The limitation would be that we do not see other players. This can be overcome by sorting the data by our metrics and see who ends up above the mean or another threshold.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCricket_Data %>% \n  ggplot(aes(x=\"\", y=Avg)) +\n  geom_boxplot() +\n    geom_jitter(color=\"black\", size=0.4, alpha=0.9) +\n    geom_text(data = subset(Cricket_Data, Avg>60), aes(label = Player)) +\n    ggtitle(\"Boxplot for Avg\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/Avg boxplot-1.png){width=672}\n:::\n:::\n\n\nWe can see that these two players have the highest Avg.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCricket_Data %>% \n  ggplot(aes(x=\"\", y=SR)) +\n  geom_boxplot() +\n    geom_jitter(color=\"black\", size=0.4, alpha=0.9) +\n    geom_text(data = subset(Cricket_Data, SR>180), aes(label = Player))+\n    ggtitle(\"Boxplot for SR\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/SR boxplot-1.png){width=672}\n:::\n:::\n\n\nThe other two have the highest SR.\n\nI know plot Avg vs SR, to see the distribution of players according to these metrics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCricket_Data %>% \n  ggplot(aes(x=SR, y=Avg)) +\n  geom_text(aes(label = Player), size = 2) +\n  labs(title = \"Plot of the Players' Avg vs SR\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/plotting SR vs Avg-1.png){width=672}\n:::\n:::\n\n\nHere we can identify the players with the highest combination of SR and Avg metrics. The closer the player is to the top right corner, the better performance he has, and reversely the closer he is to the bottom left, the worse their performance is. We can also observe that relatively few players have Avg above 40.\n\n## Clustering\n\nI then perform cluster analysis to discover any subgroups within the dataset. I use a clustering method called kmeans, which uses the Euclidean distances to subset our datapoints.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#library(tidyverse)  # data manipulation\nlibrary(cluster)    # clustering algorithms\nlibrary(factoextra) # clustering algorithms & visualization (fviz...)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n```\n:::\n:::\n\n\nI remove the variables Team and \"...1\" in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf = select(Cricket_Data, -Team, -\"...1\")\n```\n:::\n\n\nI set the Players' names as rownames to label the datapoints for better vizualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 = column_to_rownames(df, \"Player\")\n```\n:::\n\n\nI check clustering without scaling the data first.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\nk4.2 <- kmeans(df2, centers = 4, nstart = 25)\nfviz_cluster(k4.2, data = df2)\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/checking clusters without scaling-1.png){width=672}\n:::\n:::\n\n\nAs we can see, unscaled data overlaps signficantly.\n\nI standardize the data for better clustering using scale() function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf3 = as.data.frame(scale(df2))\n```\n:::\n\n\nI check the scaling:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#check scaling. Mean should be 0 and Std 1.\ndescr(df3, \n      stats = c(\"mean\", \"sd\",\"med\", \"min\", \"max\"), \n      transpose = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDescriptive Statistics  \ndf3  \nN: 70  \n\n                 Mean   Std.Dev   Median     Min    Max\n-------------- ------ --------- -------- ------- ------\n           Avg   0.00      1.00    -0.10   -1.68   3.67\n       Fifties   0.00      1.00    -0.28   -0.86   3.76\n         Fours   0.00      1.00    -0.20   -1.27   2.47\n      Hundreds   0.00      1.00    -0.30   -0.30   3.24\n          Runs   0.00      1.00    -0.19   -1.41   2.62\n        Salary   0.00      1.00    -0.31   -1.32   2.60\n         Sixes   0.00      1.00    -0.26   -1.10   4.33\n            SR   0.00      1.00     0.01   -2.78   2.85\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nk2 <- kmeans(df3, centers = 2, nstart = 25)\n```\n:::\n\n\nI visualize initial kmeans clustering with 2 clusters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_cluster(k2, data = df3)\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nI plot Clusters by Teams to see if it produces any insight.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_cluster(object = list(data = df3, \n                           cluster = Cricket_Data$Team),\n             geom = \"point\",\n             show.clust.cent = FALSE)\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/clustering with Teams-1.png){width=672}\n:::\n:::\n\n\nWe can see that Players cannot be meaningfully clustered by Teams. That is, the teams do not differ from each other based on the metrics presented. \n\nI perform Elbow method to identify optimal number of Clusters.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/algo for Elbow method-1.png){width=672}\n:::\n:::\n\n\nI use factoextra functions for better visualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\nfviz_nbclust(df3, kmeans, method = \"wss\") +\n  geom_hline(yintercept = 190, \n             linetype = \"dashed\", \n             color = \"red\") +\n  geom_hline(yintercept = 230, \n             linetype = \"dashed\", \n             color = \"brown\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/Elbow Method with fviz_nbclust-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#should check if k=5 is good too\n```\n:::\n\n\nThis chart shows that Total Within Sum of Squares drop rate decreases after 4 and even more so after 5 clusters. We can evaluate both cases and use Silhouette Method for further investigation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nk4 <- kmeans(df3, centers = 4, nstart = 25)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_cluster(k4, data = df3)\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/Plot for 4 Clusters with fviz-1.png){width=672}\n:::\n:::\n\n\nClusters are almost not overlapping. Cluster 1 is quite big compared to others.\n\nHere are the cluster centers (means) and sizes of clusters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nk4$centers\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Runs        Avg          SR   Hundreds    Fifties      Fours      Sixes\n1 -0.8138651 -0.5593812 -0.32277994 -0.3039913 -0.7165009 -0.7826572 -0.6495237\n2  1.2370084  1.5176928  1.33963042 -0.3039913  1.0654740  0.5896937  2.2273208\n3  0.6760145  0.2087239  0.06149259 -0.3039913  0.6810246  0.8186736  0.3293470\n4  1.4157758  1.2012910  0.43562184  3.2425739  0.9693617  1.3713348  0.6253612\n       Salary\n1 -0.26225776\n2  1.06586416\n3 -0.05845941\n4  0.75599997\n```\n:::\n\n```{.r .cell-code}\nk4$size\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 37  6 21  6\n```\n:::\n:::\n\n\n\nHere is the plot for Average Silhouette Method. ASM determines how well each object lies within its cluster. A high average silhouette width signals a good clustering.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_nbclust(df3, kmeans, method = \"silhouette\") +\n  geom_vline(xintercept = 5, \n             linetype = \"dashed\", \n             color = \"red\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/silhouette with fviz-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#abline(v = 5, col = \"red\", lty = \"dashed\")\n#seems k=5 is the second highest \n```\n:::\n\n\nAccording to the ASM plot, k=5 should be more optimal than k=4. I perform a new cluster analysis using 5 centers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nk5 <- kmeans(df3, centers = 5, nstart = 25)\nfviz_cluster(k5, data = df3)\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/k5 analysis with 5 clusters-1.png){width=672}\n:::\n:::\n\n\nHere are the Cluster centers which we can interpret as means for each cluster (data is scaled).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nk5$centers\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Runs        Avg          SR   Hundreds    Fifties      Fours      Sixes\n1  0.7470225  0.2122767 -0.04890149 -0.3039913  0.7518443  0.9510921  0.2651953\n2 -0.5874998 -0.0488647  0.61959027 -0.3039913 -0.6193189 -0.6313657 -0.2934097\n3  1.2370084  1.5176928  1.33963042 -0.3039913  1.0654740  0.5896937  2.2273208\n4  1.4157758  1.2012910  0.43562184  3.2425739  0.9693617  1.3713348  0.6253612\n5 -0.9146652 -0.8871118 -0.92070090 -0.3039913 -0.7257107 -0.8683501 -0.7803108\n        Salary\n1 -0.008588271\n2 -0.590968548\n3  1.065864161\n4  0.755999969\n5 -0.032797378\n```\n:::\n:::\n\n\nI create a combined dataset with the cluster numbers as variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#creating df with cluster indices as variable\nclusterdf = as.data.frame(k5$cluster)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Adding cluster indices and creating df4\ndf4 = df2 %>% \n  bind_cols(clusterdf) %>% \n  bind_cols(Cricket_Data$Team) %>% \n  rename(cluster = `k5$cluster`) %>% \n  rename(Team = \"...10\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...10`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#structure of df4\nstr(df4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t70 obs. of  10 variables:\n $ Runs    : num  442 393 61 282 510 110 123 12 490 405 ...\n $ Avg     : num  44.2 32.8 12.2 23.5 56.7 ...\n $ SR      : num  154 137.9 107 93.1 204.8 ...\n $ Hundreds: num  0 1 0 0 0 0 0 0 0 0 ...\n $ Fifties : num  5 1 0 1 4 0 0 0 4 4 ...\n $ Fours   : num  31 45 5 20 31 10 8 1 45 41 ...\n $ Sixes   : num  26 9 2 7 52 3 4 0 34 22 ...\n $ Salary  : num  1.719 0.625 0.514 0.344 1.328 ...\n $ cluster : int  3 4 5 5 3 5 5 5 3 1 ...\n $ Team    : chr  \"Royal Challengers Bangalore\" \"Rajasthan Royals\" \"Royal Challengers Bangalore\" \"Chennai Super Kings\" ...\n```\n:::\n:::\n\n\nHere are the descriptive statistics for each cluster (data is unscaled).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstby(\n  data = df4,\n  INDICES = df4$cluster, # by clusters\n  FUN = descr, # descriptive statistics from summarytools\n  stats = c(\"mean\", \"sd\",\"med\", \"min\", \"max\"), \n  transpose = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNon-numerical variable(s) ignored: Team\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nDescriptive Statistics  \ndf4  \nGroup: cluster = 1  \nN: 19  \n\n                   Mean   Std.Dev   Median      Min      Max\n-------------- -------- --------- -------- -------- --------\n           Avg    31.74      5.73    31.62    22.06    43.00\n       cluster     1.00      0.00     1.00     1.00     1.00\n       Fifties     2.79      0.92     3.00     1.00     5.00\n         Fours    38.42     11.04    41.00    21.00    64.00\n      Hundreds     0.00      0.00     0.00     0.00     0.00\n          Runs   375.32     74.26   373.00   253.00   529.00\n        Salary     0.91      0.66     0.69     0.16     2.34\n         Sixes    13.05      5.56    11.00     4.00    25.00\n            SR   131.89     10.48   130.86   115.10   151.70\n\nGroup: cluster = 2  \nN: 17  \n\n                   Mean   Std.Dev   Median      Min      Max\n-------------- -------- --------- -------- -------- --------\n           Avg    27.85     10.89    26.62    14.60    52.75\n       cluster     2.00      0.00     2.00     2.00     2.00\n       Fifties     0.41      0.62     0.00     0.00     2.00\n         Fours    11.76      5.17    13.00     2.00    19.00\n      Hundreds     0.00      0.00     0.00     0.00     0.00\n          Runs   150.12     68.37   160.00    63.00   279.00\n        Salary     0.52      0.52     0.29     0.03     1.95\n         Sixes     7.71      5.76     7.00     1.00    22.00\n            SR   148.72     17.69   151.31   125.87   175.00\n\nGroup: cluster = 3  \nN: 6  \n\n                   Mean   Std.Dev   Median      Min      Max\n-------------- -------- --------- -------- -------- --------\n           Avg    51.18     16.97    44.43    37.53    83.20\n       cluster     3.00      0.00     3.00     3.00     3.00\n       Fifties     3.33      1.37     3.50     1.00     5.00\n         Fours    32.33      7.89    31.00    22.00    45.00\n      Hundreds     0.00      0.00     0.00     0.00     0.00\n          Runs   458.00     44.24   465.00   402.00   510.00\n        Salary     1.63      0.76     1.72     0.31     2.34\n         Sixes    31.83     10.53    28.00    23.00    52.00\n            SR   166.85     26.24   158.33   134.62   204.81\n\nGroup: cluster = 4  \nN: 6  \n\n                   Mean   Std.Dev   Median      Min      Max\n-------------- -------- --------- -------- -------- --------\n           Avg    46.47     15.31    44.05    32.75    69.20\n       cluster     4.00      0.00     4.00     4.00     4.00\n       Fifties     3.17      3.13     2.00     0.00     8.00\n         Fours    45.50      9.57    47.00    28.00    57.00\n      Hundreds     1.00      0.00     1.00     1.00     1.00\n          Runs   488.17    130.70   454.50   342.00   692.00\n        Salary     1.42      0.87     1.48     0.31     2.66\n         Sixes    16.50      5.92    15.50     9.00    25.00\n            SR   144.09      7.94   142.66   135.38   157.24\n\nGroup: cluster = 5  \nN: 22  \n\n                   Mean   Std.Dev   Median     Min      Max\n-------------- -------- --------- -------- ------- --------\n           Avg    15.37      7.49    16.31    3.60    35.33\n       cluster     5.00      0.00     5.00    5.00     5.00\n       Fifties     0.23      0.43     0.00    0.00     1.00\n         Fours     7.77      6.51     5.50    1.00    20.00\n      Hundreds     0.00      0.00     0.00    0.00     0.00\n          Runs    94.91     68.50    85.00   12.00   282.00\n        Salary     0.89      0.48     0.81    0.07     1.95\n         Sixes     3.05      1.91     3.00    0.00     7.00\n            SR   109.93     21.24   116.50   63.15   150.00\n```\n:::\n:::\n\n\nWe can observe the means of the produced clusters and check if the high average performance corresponds with higher or lower average salaries. This would help to identify clusters which contain underpaid or overpaid players.\n\nIn the given tables, we can observe that Cluster 3 has the top average salary of 1.63. The second highest earning cluster is Cluster 4. We can also observe that these clusters contain the highest performing players since their average performing metrics are the highest among the cluster. The exceptions are SR, where Cluster 2 is performing better than Cluster 4, taking second place, and Fours, where Cluster 1 performs better than Cluster 3, coming second. Otherwise, we can see that they are the top performers and thus the top earners. Their performance in the key metrics is, on average, in the top 3 (even top 2, mostly) and have the highest average salaries. Even their minimums in Avg and SR are as high as average values of most other clusters, if not higher. The 6 players in Cluster 4 are the only ones scoring Hundreds, separating them from the 6 players of Cluster 3. We can therefore identify them as 12 top performers and top earners. Therefore, we can call the Cluster 3 “Top Performers” and Cluster 4 “Hundred Scorers”.\n\nThe other cluster is Cluster 1. We can call them as the “Average Player”. They are the second most populous cluster and perform average. Their metrics is in the middle between most of the Clusters, except SR (they are 3rd) and Fours (2nd). We can also identify them as average since they get the average pay. We can see that in the scaled cluster centers, where the closer the value is to 0, the closer it is to the mean.\n\nThe remaining two clusters are 2 and 5. Interestingly, we can see that Cluster 2 overperforms Cluster 5 by all metrics but gets the lowest salary on average (0.52 vs 0.89). Not only that, Cluster 5, on average, performs worse than any other cluster but the salary is very close to the pay of Cluster “Average” (0.89 and 0.91). It is also worth noticing that Cluster 2 performs the 2nd best by SR, one of the key metrics Mitra is interested in. All this indicates that Cluster 2 is underpaid. Thus, I call cluster 5 “Overpaid” and Cluster 2 “Underpaid”.\n\n## Parallel Coordinate Plot for Cluster interpretation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nk5centers = k5$centers %>% \n  as.data.frame() %>% \n  rownames_to_column(var = \"cluster\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(GGally) #ggparcoord\nlibrary(plotly)\nlibrary(MASS) #parcoord\n```\n:::\n\n\nTo better analyze and compare the clusters I use Parallel Coordinate Plot to see the Cluster centers (means) all at the same time. In this plot the higher values of the metrics are, the better. It means that high metrics values should be followed by high salary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = k5centers,\n           columns = c(2:9),\n           groupColumn = \"cluster\",\n           scale = \"globalminmax\") +\n  geom_line(size = 1) +\n  scale_color_discrete(name = \"Cluster\",\n                       labels = c(\"Average Player\", \n                                  \"Underpaid\", \n                                  \"Top Performers\", \n                                  \"Hundred Scorers\",\n                                  \"Overpaid\")) +\n  labs(title = \"Parallel Coordinate Plot of Cluster Centers by Variables\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/PCP of Cluster Centers including Hundreds-1.png){width=672}\n:::\n:::\n\n\nHundreds Variable skews the view a little, so I remove it from the plot but keep in mind that only \"Hundred Scorers\" cluster (Blue) has players who scored Hundreds.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = dplyr::select(k5centers, -Hundreds), #MASS masks select\n           columns = c(2:8),\n           groupColumn = \"cluster\",\n           scale = \"globalminmax\") +\n  geom_line(size = 1) +\n  scale_color_discrete(name = \"Cluster\",\n                       labels = c(\"Average Player\", \n                                  \"Underpaid\", \n                                  \"Top Performers\", \n                                  \"Hundred Scorers\",\n                                  \"Overpaid\")) +\n  labs(title = \"Parallel Coordinate Plot of Cluster Centers by Variables\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/PCP excluding Hundreds-1.png){width=672}\n:::\n:::\n\n\nWe can observe that Clusters Top Performers and Hundred Scorers perform generally well and earn higher than average salaries. Cluster Average Player is somewhat in the middle and earns average salary. Most interestingly, Clusters Underpaid and Overpaid on average perform the worst but the Underpaid plays better than the Overpaid by all metrics and even has the second highest SR yet earns the least. This happens while the Overpaid earns as much as Average Player. It should also be noticed that the scaled average salaries of the Clusters Average Player, Top Performers, and Hundred Scorers are in the vicinity of the scaled Avg and SR, whereas the Clusters Underpaid and Overpaid are not. This might again indicate that players are underpaid and overpaid in the respective clusters, on average.\n\nI also show the cluster centers separately side by side.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = k5centers,\n           columns = c(2:9),\n           groupColumn = \"cluster\",\n           scale = \"globalminmax\") +\n  facet_wrap(~ cluster) +\n  labs(title = \"Cluster Centers by Variables\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/PCP for each cluster spearately-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = dplyr::select(k5centers, -Hundreds),\n           columns = c(2:8),\n           groupColumn = \"cluster\",\n           scale = \"globalminmax\") +\n  facet_wrap(~ cluster) +\n  labs(title = \"Cluster Centers by Variables without Hundreds\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/PCP for each cluster spearately without Hundreds-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nk4centers = k4$centers %>% \n  as.data.frame() %>% \n  rownames_to_column(var = \"cluster\")\n```\n:::\n\n\nI create Parallel Coordinate Plot to identify the differences when we use 4 clusters instead of 5.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = dplyr::select(k4centers, -Hundreds),\n           columns = c(2:8),\n           groupColumn = \"cluster\",\n           scale = \"globalminmax\") +\n  geom_line(size = 1) +\n  labs(title = \"Parallel Coordinate Plot of Cluster Centers by Variables\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/PCP for Clusters with 4 centers-1.png){width=672}\n:::\n:::\n\n\nHere we can observe that Cluster Analysis with only 4 centers merges two worst performing Clusters together, so we do not see underpaid players. I, therefore, suggest sticking with 5 clusters.\n\nThese are average values, so we might want to look at the individual data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf5 = df3 %>% \n  bind_cols(clusterdf) %>% \n  rename(cluster = `k5$cluster`)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::select(df5, -Hundreds) %>% #MASS masks select\n  mutate_at(vars(\"cluster\"), as.factor) %>% #needs to factor cluster\n  ggparcoord(columns = c(1:7),\n           groupColumn = \"cluster\",\n           scale = \"globalminmax\") +\n  geom_line(size = 0.5) +\n  scale_color_manual(values = c(\"red\", \"green\", \"blue\", \"orange\", \"black\")) +\n  labs(title = \"Parallel Coordinate Plot of Cluster Centers by Variables\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::select(df5, -Hundreds) %>% #MASS masks select\n  mutate_at(vars(\"cluster\"), as.factor) %>% \n  ggparcoord(columns = c(1:7),\n           groupColumn = \"cluster\",\n           scale = \"globalminmax\") +\n  geom_line(size = 0.5) +\n  scale_color_manual(values = c(\"red\", \"green\", \"blue\", \"orange\", \"black\")) +\n  facet_wrap(~ cluster) +\n  labs(title = \"Parallel Coordinate Plot of Cluster Centers by Variables\")\n```\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nThe lines intertwine in some places but generally stay within its cluster. Most intertwining happens in the Salary. There is also some between Clusters 1 and 2 in Avg and SR metrics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCricket_Data %>% \n  bind_cols(as.factor(clusterdf$`k5$cluster`)) %>% \n  rename(cluster = ...12) %>% #`k5$cluster` is renamed into ...12\n  ggplot(aes(x=SR, y=Avg)) +\n  geom_text(aes(label = Player, \n                color = cluster), \n            size = 2) +\n  scale_color_discrete(name = \"Cluster\",\n                       labels = c(\"Average Player\", \n                                  \"Underpaid\", \n                                  \"Top Performers\", \n                                  \"Hundred Scorers\",\n                                  \"Overpaid\")) +\n  guides(color = guide_legend(override.aes = list(size = 5))) + #size=5 overrides the size of colored letters in legend\n  ggtitle(\"Plot of the Players' Avg vs SR clustered\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...12`\n```\n:::\n\n::: {.cell-output-display}\n![](cluster_ipl_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nHere we can also observe separation of the key metrics by clusters and that Cluster Underpaid is closer to Average Player than Overpaid Cluster. In other words, it has higher SR and Avg than Overpaid clusters, but their salary does not reflect that.\n\n## Conclusion\n\nI suggest reevaluating the pay of the players from Cluster 2. The Teams might also reconsider the salaries of the players from Cluster 5 who perform the worst but get paid the average rate. The cluster centers showed the average performance of the players from the same subgroups but a more individual evaluation should take place before the final decision.\n\n",
    "supporting": [
      "cluster_ipl_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}